- name: Create read-only directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - "{{ influxdb_etc_path }}"

- name: Create writeable directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: nobody
    group: nogroup
    mode: 0755
  loop:
    - "{{ influxdb_backup_path }}"
    - "{{ influxdb_data_path }}"

- name: Create service configuration
  ansible.builtin.template:
    src: influxdb.env.j2
    dest: "{{ influxdb_etc_path }}/influxdb.env"
    owner: root
    group: root
    mode: 0644
  notify: Restart service

- name: Pull Docker image
  community.general.docker_image:
    name: "quay.io/influxdb/influxdb:{{ influxdb_docker_image_version }}"
    source: pull

- name: Create systemd service
  ansible.builtin.template:
    src: influxdb.service.j2
    dest: /etc/systemd/system/influxdb.service
    owner: root
    group: root
    mode: 0644
  notify: Restart service

- name: Start and enable service
  ansible.builtin.systemd:
    name: influxdb
    state: started
    enabled: true
    daemon_reload: true

- name: Wait for service to become available
  ansible.builtin.uri:
    url: http://localhost:8086
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

- name: Configure service
  ansible.builtin.command: |
    docker exec --interactive influxdb.service \
    influx setup \
    --username '{{ influxdb_primary_user_name }}' \
    --password '{{ influxdb_primary_user_password }}' \
    --org '{{ influxdb_primary_organization_name }}' \
    --bucket '{{ influxdb_primary_bucket_name }}' \
    --retention '{{ influxdb_primary_bucket_name_retention_period }}' \
    --force
  args:
    creates: "{{ influxdb_data_path }}/configs"

- name: List users
  ansible.builtin.command: |
    docker exec --interactive influxdb.service \
    influx user list \
    --name '{{ item.name }}'
  failed_when: false
  changed_when: false
  loop: "{{ influxdb_user_list }}"
  register: found_users

- name: Create users
  ansible.builtin.command: |
    docker exec --interactive influxdb.service \
    influx user create \
    --name '{{ item.0.name }}' \
    --password '{{ item.0.password }}' \
    --org '{{ influxdb_primary_organization_name }}'
  when: item.1.rc != 0
  loop: "{{ influxdb_user_list | zip(found_users.results) | list }}"

- name: List buckets
  ansible.builtin.command: |
    docker exec --interactive influxdb.service \
    influx bucket list \
    --name '{{ item.name }}'
  failed_when: false
  changed_when: false
  loop: "{{ influxdb_bucket_list }}"
  register: found_buckets

- name: Create buckets
  ansible.builtin.command: |
    docker exec --interactive influxdb.service \
    influx bucket create \
    --name '{{ item.0.name }}' \
    --description '{{ item.0.description }}' \
    --org '{{ influxdb_primary_organization_name }}' \
    --retention '{{ item.0.retention }}'
  when: item.1.rc != 0
  loop: "{{ influxdb_bucket_list | zip(found_buckets.results) | list }}"

- name: Create backup script
  ansible.builtin.template:
    src: backup_influxdb.sh.j2
    dest: /usr/local/bin/backup_influxdb.sh
    owner: root
    group: root
    mode: 0755

- name: Add backup cron job
  ansible.builtin.cron:
    name: Backup InfluxDB
    minute: "30"
    hour: "4"
    job: "/usr/local/bin/backup_influxdb.sh || echo \"ERROR: A problem occurred during backup of InfluxDB. Please check the logfiles. journalctl -t backup_influxdb.sh\""  # noqa 204
    user: root
